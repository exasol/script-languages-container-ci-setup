{% include "heading.tmpl" %}
{% raw %}
name: SLC-CI-Check-For-Build

on:
  workflow_call:
    inputs:
      flavor:
          description: 'A flavor'
          required: true
          type: string
    outputs:
      result:
        description: "Build-Mode: Possible value 'no_build_needed', 'normal', 'rebuild'"
        value: ${{ jobs.aggregate.outputs.result }}

jobs:
  on_pull_request:
    runs-on: ubuntu-24.04
    if: ${{github.event_name == 'pull_request'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@1.2.0
        with:
          python-version: "3.10"
      - name: Run check
        id: run-check
        run: |
          poetry run -- exaslc-ci check-if-build-needed --flavor "$FLAVOR" --base-ref "$BASE_REF" --github-output-var continue
        env:
          BASE_REF: ${{ github.base_ref }}
          FLAVOR: ${{ inputs.flavor }}
    outputs:
      result: ${{ steps.run-check.outputs.continue == 'True' && 'normal' || 'no_build_needed' }}

  on_push_event:
    runs-on: ubuntu-24.04
    if: ${{github.event_name == 'push'}}
    steps:
      - name: Write rebuild
        id: write-rebuild
        run: echo "result=rebuild" >> "$GITHUB_OUTPUT"
    outputs:
      result: ${{ steps.write-rebuild.outputs.result }}

  aggregate:
    needs: [on_pull_request, on_push_event]
    runs-on: ubuntu-24.04
    steps:
      - name: debug
        run: |
          echo "Job on_pull_request output: ${{ needs.on_pull_request.outputs.result }}"
          echo "Job on_push_event output: ${{ needs.on_push_event.outputs.result }}"
    outputs:
      result: ${{ needs.on_pull_request.outputs.result != '' && needs.on_pull_request.outputs.result || needs.on_push_event.outputs.result }}{% endraw %}
