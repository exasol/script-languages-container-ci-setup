[project]
name = "exasol-script-languages-container-ci-setup"
version = "3.0.0"
description = "Manages AWS cloud CI build infrastructure."

requires-python = ">=3.10, <4.0"

authors = [
    { name="Thomas Uebensee", email="Thomas Uebensee <ext.thomas.uebensee@exasol.com>" }
]

keywords = ['exasol', 'udf', 'script-languages']

license = "MIT"

readme = 'README.md'

dependencies = [
"click (>=8.1.3, <9.0.0)",
"jinja2 (>=3.1.6, <4.0.0)",
"exasol-error-reporting (>=1.0.0, <2.0.0)",
"exasol-script-languages-container-ci (>=3.1.0, <4.0.0)",
"exasol-script-languages-container-tool (>=3.3.0, <4.0.0)",
"boto3 (>=1.37.1, <2.0.0)",
"botocore (>=1.37.11, <2.0.0)",
"jsonschema (>=4.22.0, <5.0.0)",
"PyGithub (>=2.3.0, <3.0.0)",
]

[tool.poetry]

packages = [
    {include = "exasol"}
]

[project.urls]

repository = "https://github.com/exasol/script-languages-container-ci-setup"
homepage = "https://github.com/exasol/script-languages-container-ci-setup"

[build-system]
requires = ["poetry_core>=2.1.0"]
build-backend = "poetry.core.masonry.api"

[project.scripts]
exaslc-ci-setup = 'exasol.slc_ci_setup.cli.main:main'

[tool.poetry.group.dev.dependencies]
toml = ">=0.10.2"
pytest = "^7.1.1"
pytest-mock = "^3.7.0"
cfn-lint = "^0.75.1"
exasol-toolbox = ">=0.20.0"
actionlint-py = "^1.7.7.23"

[tool.pytest.ini_options]
minversion = "6.0"

testpaths = [
    "test"
]


[tool.coverage.run]
source = [
    "exasol",
]

[tool.coverage.report]
fail_under = 15


[tool.black]
line-length = 88
verbose = false
include = "\\.pyi?$"


[tool.isort]
profile = "black"
force_grid_wrap = 2


[tool.pylint.master]
output-format = "colorized,json:.lint.json,text:.lint.txt"
ignore-paths = [
    ".*/exasol_script_languages_container_ci_setup/.*", #legacy implementation for AWS, will be removed soon
    ".*/test/.*",
    ".*/flavors/.*",
    ".*/test_containers/.*",
]

ignore = [
    "noxfile.py"
]

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
disable = """
    C
"""


[tool.pylint.format]
max-line-length = 88
max-module-lines = 800

[tool.mypy]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "test.*",
]
ignore_errors = true
